#!/bin/bash

#   Simple script for sending firewall commands to the
#   network actuator.

FILE="/tmp/netblock.dat"
if [ "$*" == "ls" ]
then
	cat $FILE
	exit 0
fi

usage(){ echo "USAGE: netblock [block|unblock] [incoming|outgoing] [ipv4|ipv6|tcp|udp] <value>"; }

#Verify string is a valid IPv4 address
ipv4check(){
ip=$1
ipv4format="[0-9]{1,3}"
ipv4regex="^${ipv4format}\.${ipv4format}\.${ipv4format}\.${ipv4format}$"
if [[ $ip =~ $ipv4regex ]];
then
        return "1"
else
	return "0"
fi
}

#Verify string is a valid IPv6 address
ipv6check(){
ip=$1
ipv6format="[0-9a-fA-F]{0,4}"
ipv6regex="^${ipv6format}\:${ipv6format}\:${ipv6format}\:${ipv6format}\:${ipv6format}\:${ipv6format}$"
if [[ $ip =~ $ipv6regex ]];
then
        return "1"
else
	return "0"
fi
}

#Verify string is a valid port
portcheck(){
port=$1
portregex="^[0-9]{1,5}$"
if [[ $port =~ $portregex ]];
then
	return "1"
else
	return "0"
fi
}

# Verify command arguments order
if [[ "$1" != "block" && "$1" != "unblock" ]]
then
	usage
	exit 1
fi

if [[ "$2" != "incoming" && "$2" != "outgoing" ]]
then
	usage
	exit 1
fi

if [[ "$3" != "src" && "$3" != "dst" ]]
then
	usage
	exit 1
fi

if [[ "$4" != "tcp" && "$4" != "udp" && "$4" != "ipv4" && "$4" != "ipv6" ]]
then
	usage
	exit 1
fi

# Verify protocol format
value=""
if [[ "$4" == "ipv4" ]]
then
	ipv4check $5
	if [ "$?" -eq "0" ]
	then
		echo "Incorrect IPv4 format"
		usage
		exit 1
	else
		value="$5"
	fi
fi

if [[ "$4" == "ipv6" ]]
then
	ipv6check $5
	if [ "$?" -eq "0" ]
	then
		echo "Incorrect IPv6 format"
		usage
		exit 1
	else
		value="$(sipcalc ${ip} | fgrep Expanded | awk '{printf "%s", $5}')"
	fi
fi

if [[ "$4" == "tcp" || "$4" == "udp" ]]
then
	portcheck $5
	if [ "$?" -eq "0" ]
	then
		echo "Invalid port value"
		usage
		exit 1
	else
		value="$5"
	fi
fi

args="$1 $2 $3 $4 $value"
#Run commands
command="$(echo $args | xargs)"
echo $command
chardevice="/dev/netblockchar"
if [ ! -e "$chardevice" ]
then
	echo "Load netblock kernel module before running program."
	exit 1
fi

sudo printf "%s" "$command" >> /dev/netblockchar
if [ $? -ne 0 ]
then
	usage
else
	if [[ "$1" == "block" ]]
	then
		echo $command >> $FILE
	else
		sudo sed -i "/block $2 $3 $4 $5/d" $FILE
	fi
fi
