class SAMLAssertionExtension(AuthorizationCodeGrant):

    CLIENT_ASSERTION_TYPE = "urn:ietf:params:oauth:client-assertion-type:saml2-bearer"

    """
    The following section defines the use of assertions as client
    credentials as an extension of Section 2.3 of OAuth 2.0 [RFC6749].
    When using assertions as client credentials, the client includes the
    assertion and related information using the following HTTP request
    parameters:

    client_assertion_type
        REQUIRED.  The format of the assertion as defined by the
        authorization server.  The value will be an absolute URI.

    client_assertion
        REQUIRED.  The assertion being used to authenticate the client.
        Specific serialization of the assertion is defined by profile
        documents.

    client_id
        OPTIONAL.  The client identifier as described in Section 2.2 of
        OAuth 2.0 [RFC6749].  The "client_id" is unnecessary for client
        assertion authentication because the client is identified by the
        subject of the assertion.  If present, the value of the
        "client_id" parameter MUST identify the same client as is
        identified by the client assertion.

    The following example demonstrates a client authenticating using an
    assertion during an access token request, as defined in Section 4.1.3
    of OAuth 2.0 [RFC6749] (with extra line breaks for display purposes
    only):

        POST /token HTTP/1.1
        Host: server.example.com
        Content-Type: application/x-www-form-urlencoded

        grant_type=authorization_code&
        code=n0esc3NRze7LTCu7iYzS6a5acc3f0ogp4&
        client_assertion_type=urn%3Aietf%3Aparams%3Aoauth
        %3Aclient-assertion-type%3Asaml2-bearer&
        client_assertion=PHNhbW...[omitted for brevity]...ZT

    Token endpoints can differentiate between assertion-based credentials
    and other client credential types by looking for the presence of the
    "client_assertion" and "client_assertion_type" parameters, which will
    only be present when using assertions for client authentication.

    An IETF URN for use as the "client_assertion_type" value may be
    requested using the template in [RFC6755].  A URN of the form
    urn:ietf:params:oauth:client-assertion-type:* is suggested.
    """

    # validate client_assertion_type
    def validate_client_assertion_type(assertion_type):
        return assertion_type == CLIENT_ASSERTION_TYPE
