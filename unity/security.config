# Additional security settings and relevant configuration options
# Some of these came directly from the Kernel Self Protection Project
# https://kernsec.org/wiki/index.php/Kernel_Self_Protection_Project/Recommended_Settings

# Report BUG() and WARN() conditions and kill the offending process.
# 2.6.12 - *
CONFIG_BUG=y

# Make sure the kernel page tables have safe permissions.
# 2.6.0 - *
CONFIG_DEBUG_KERNEL=y
# x86 2.6.16 - 4.10 arm 3.19 - 4.10 arm64 4.0 - 4.10
CONFIG_DEBUG_RODATA=y
# 4.11 - * (depends on ARCH_HAS support)
CONFIG_STRICT_KERNEL_RWX=y

# Report any dangerous memory permissions (x86 and arm64 ONLY)
# x86 4.4 - * arm64 4.10 - *
CONFIG_DEBUG_WX=y

# Crash dumps provide access to dumped kernel images which could contain key
# material. (Also disables CONFIG_PROC_VMCORE)
# 2.6.13 - *
# CONFIG_CRASH_DUMP=n

# Config information from the running kernel... not a significant threat, but
# not necessary.
# 2.6.0 - *
CONFIG_IKCONFIG=n

# PROC_KCORE provides access to virtual kernel coredumps which could contain
# key material.
# 2.6.0 - * (always disabled on ARM)
CONFIG_PROC_KCORE=n

# KEXEC may allow an attacker to subvert previous TCB measurement and
# potentially expose sensitive data or key material.
# x86 2.6.19 - * arm 2.6.21 - * arm64 4.8 - *
# TODO: temporarily disabled because of garbage hyperv code in RHEL7
# arch/x86/kernel/cpu/mshyperv.c (104)
# CONFIG_KEXEC=n

# STRICT_DEVMEM ensures that only I/O memory is accessible through /dev/mem
# While LURE can be configured to control access to the /dev/mem character
# device, it is still advisable to enable this configuration option.
# x86 2.6.27 - * arm 2.6.37 - * arm64 3.15 - *
CONFIG_STRICT_DEVMEM=y

# Restrict I/O memory accessible through /dev/mem to idle ranges.
# 4.5 - *
CONFIG_IO_STRICT_DEVMEM=y

# KGDB support should never be required within a production environment
# 2.6.26 - *
CONFIG_KGDB=n

# ftrace support should never be required within a production environment
# 2.6.31 - *
CONFIG_FTRACE=y

# Perform additional validation of various commonly targeted data structures.
CONFIG_DEBUG_CREDENTIALS=y
CONFIG_DEBUG_NOTIFIERS=y
CONFIG_DEBUG_LIST=y
CONFIG_DEBUG_SG=y
CONFIG_BUG_ON_DATA_CORRUPTION=y

# Enable support for seccomp and seccomp Berkeley Packet Filter (BPF) mode
# x86 2.6.12 - * arm 2.6.37 - * arm64 3.19 - *
CONFIG_SECCOMP=y
CONFIG_SECCOMP_FILTER=y

# Enable bounds checking for usercopy/copy_to_user operations
# 4.8 - *
CONFIG_HARDENED_USERCOPY=y

# Randomize SLAB allocator freelists used for creating new pages, thereby
# reducing the predictability of the kernel slab allocator against heap
# overflows.
# 4.7 - *
CONFIG_SLAB_FREELIST_RANDOM=y

# Enable support for SLUB cache validation
# 2.6.22 - *
CONFIG_SLUB_DEBUG=y

# Clear higher-level memory allocations when they are freed and add poison
# value do detect memory corruptions. (May have an unacceptable performance
# penalty)
# 2.6.30 - *
CONFIG_DEBUG_PAGEALLOC=y
CONFIG_DEBUG_PAGEALLOC_ENABLE_DEFAULT=y

# Not necessary for ARCH_SUPPORTS_DEBUG_PAGEALLOC
CONFIG_PAGE_POISONING=y
CONFIG_PAGE_POISONING_NO_SANITY=y
CONFIG_PAGE_POISONING_ZERO=y

# Virtually mapped kernel stacks with guard pages
# 4.9 - *
CONFIG_VMAP_STACK=y

# Disable hibernation
# 2.6.23 - *
CONFIG_HIBERNATION=n

# Disable support for miscellaneous binary formats
# 2.6.0 - *
CONFIG_BINFMT_MISC=n

# Enforce modern PTY interface (devpts)
# 2.6.4 - *
CONFIG_LEGACY_PTYS=n

# This can be set from the cmdline, which is more convenient for testing
# oops=panic panic=-1
# CONFIG_PANIC_ON_OOPS=y
# CONFIG_PANIC_TIMEOUT=-1

# Disable BPF JIT to make Spectre attacks more difficult
# This may be replaced in the future if the CONFIG_BPF_JIT_ALWAYS_ON patches
# are accepted.
CONFIG_BPF_JIT=n
